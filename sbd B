/*SOAL 1
Jelaskan apa yang dimaksud dengan grant and revoke? dan perintah apa saja yang
dapat kita gunakan pada gran and revoke? berikan contohnya*/
-- JAWAB -- 
/* 
Grant dan Revoke adalah dua perintah yang digunakan dalam manajemen hak akses pada database, khususnya pada MySQL dan SQL Server. Grant digunakan untuk memberikan hak akses 
oleh administrator (pemilik utama) server kepada user (pengguna biasa), sedangkan Revoke memiliki kegunaan terbalik dengan Grant, yaitu untuk menghilangkan hak akses yang telah 
diberikan kepada user oleh administrator atau mencabut hak-hak dari seorang user terhadap database tertentu atau sebagian isi dari database

 ---  Perintah Grant ---
Perintah Grant digunakan untuk memberikan hak akses kepada user. Contoh sintaks umum pada Grant adalah sebagai berikut:
    GRANT hak_akses ON nama_tabel TO pemakai;
    GRANT ALL PRIVILEGES ON database_name.* TO �myuser�IDENTIFIED BY �mypassword�;
    
Contoh penggunaan Grant:
    GRANT SELECT ON Point_Of_Sales.jenis TO Febe;
    GRANT SELECT ON Point_Of_Sales.jenis TO Winda;
    GRANT SELECT ON Point_Of_Sales.item TO Elfrida;
    GRANT ALL PRIVILEGES ON Point_Of_Sales.User TO Admin;
    GRANT ALL ON Point_Of_Sales.jualDetail TO Admin;
    SHOW GRANTS FOR root@localhost;
    SHOW GRANTS FOR Admin;
    GRANT SELECT,INSERT ON Point_Of_Sales.jualDetail TO kasir;
    GRANT SELECT(Kode,Nama) ON Point_Of_Sales.jenis TO Elfrida;
    GRANT UPDATE (kodeItem,NmItem,kategori,Harga) ON Point_Of_Sales.item TO Elfrida;
    
--- Perintah Revoke --- 
Perintah Revoke digunakan untuk menghapus atau mencabut kembali izin akses user MySQL yang sebelumnya telah diberikan. Contoh sintaks umum pada Revoke adalah sebagai berikut:
    REVOKE hak_akses ON nama_tabel FROM namaAccount@namaHost;
    
Contoh penggunaan Revoke:
    REVOKE ALL ON *.* FROM nm_user@localhost IDENTIFIED BY �nm_passwd�;
    REVOKE ALL ON nm_db.nm_tbl FROM nm_user@localhost IDENTIFIED BY �nm_passwd�;
    REVOKE UPDATE(nama) ON nm_db.nm_tbl FROM nm_user@localhost IDENTIFIED BY �nm_passwd�;
Perintah Grant dan Revoke sangat penting dalam manajemen hak akses pada database, karena memungkinkan administrator untuk mengatur siapa yang dapat mengakses database, tabel, 
dan kolom, serta apa yang dapat mereka lakukan terhadap data tersebut.
*/

/*SOAL 2
Buatlah tabel dengan nama mhs_pengulangan dengan strukur sebagai berikut :
-----------------------------------------------------
| npm      | nama_lengkap    | kelas_mhs | matkul   |
-----------------------------------------------------
| 10267789 | Putri Damayanti | 2KA08     | IT011338 |
| 30197615 | Randy Ramadhan  | 3KA17     | IT011325 |
| 10186753 | Rahma Salsabila | 2IA07     | AK011318 |
| 10991865 | Rizky Ridho     | 4KA06     | AK011211 |
-----------------------------------------------------

Buatlah tabel dengan nama mk_gundar dengan strukur berikut : 
---------------------------------------
| kode_mk  | nama_mk                  |
---------------------------------------
| IT011338 | Statistika               |
| AK011211 | Pemrograman Berbasis Web |
| IT011325 | Sistem Operasi           |
| AK011318 | Sistem Basis Data        |
| IT011234 | Konsep Data Mining       |
---------------------------------------
Kemudian buatlah viewnya dengan nama v_mhs_gundar dengan hanya menampilkan nama, kelas, dan nama_mk saja
serta ubahlah nama kolom nama menjadi name, kelas_mhs menjadi class, dan nama_mk menjadi subject
tanpa merubah nama kolom tabel aslinya */

--JAWAB--

-- Membuat tabel mhs_pengulangan
CREATE TABLE mhs_pengulangan (
    npm VARCHAR(10),
    nama_lengkap VARCHAR(50),
    kelas_mhs VARCHAR(10),
    matkul VARCHAR(10)
);

-- Menambahkan data ke dalam tabel mhs_pengulangan
INSERT INTO mhs_pengulangan (npm, nama_lengkap, kelas_mhs, matkul) VALUES
('10267789', 'Putri Damayanti', '2KA08', 'IT011338');
INSERT INTO mhs_pengulangan (npm, nama_lengkap, kelas_mhs, matkul) VALUES
('30197615', 'Randy Ramadhan', '3KA17', 'IT011325');
INSERT INTO mhs_pengulangan (npm, nama_lengkap, kelas_mhs, matkul) VALUES
('10186753', 'Rahma Salsabila', '2IA07', 'AK011318');
INSERT INTO mhs_pengulangan (npm, nama_lengkap, kelas_mhs, matkul) VALUES
('10991865', 'Rizky Ridho', '4KA06', 'AK011211');

-- Membuat tabel mk_gundar
CREATE TABLE mk_gundar (
    kode_mk VARCHAR(10),
    nama_mk VARCHAR(50)
);

-- Menambahkan data ke dalam tabel mk_gundar
INSERT INTO mk_gundar (kode_mk, nama_mk) VALUES
('IT011338', 'Statistika');
INSERT INTO mk_gundar (kode_mk, nama_mk) VALUES
('AK011211', 'Pemrograman Berbasis Web');
INSERT INTO mk_gundar (kode_mk, nama_mk) VALUES
('IT011325', 'Sistem Operasi');
INSERT INTO mk_gundar (kode_mk, nama_mk) VALUES
('AK011318', 'Sistem Basis Data');
INSERT INTO mk_gundar (kode_mk, nama_mk) VALUES
('IT011234', 'Konsep Data Mining');

-- Membuat view v_mhs_gundar dengan menambahkan alias kepada masing masing kolom.
CREATE VIEW v_mhs_gundar AS
SELECT
    m.nama_lengkap AS name,
    m.kelas_mhs AS class,
    g.nama_mk AS subject
FROM
    mhs_pengulangan m
INNER JOIN
    mk_gundar g ON m.matkul = g.kode_mk;

SELECT*FROM v_mhs_gundar


/*SOAL 3
Di sebuah perusahaan bernama TechSolutions, terdapat sebuah tim administrator basis data perusahaan yang 
memiliki peran dan tanggung jawab dalam mengelola basis data dari 3 pengguna, yaitu user_Andi, user_Bobi, dan user_Caca. 
Tugas tim tersebut adalah:
-Buatkan role dengan nama 'DataAdministrator' yang memiliki perizinan untuk menampilkan dan menambahkan data pada tabel "big_data".
-------------------------------------------------
| id_user   | nama_lengkap    | posisi           |
-------------------------------------------------
| A0011      | Kim Jun Myeon  | Advisor          | 
| A0021      | Byun Baekhyun  | Regional Manager |
| A0032      | Park Chan Yeol | Creative Lead    |
| A0033      | Kim Kai        | Media Specialist |
--------------------------------------------------
-lalu berikan akses untuk role "DataAdministrator' kepada user_Andi dan user_Bobi.
-namun tetap pastikan user_caca tidak memiliki akses apapun ke tabel "big_data". 
-Kemudian cabut semua hak akses yang telah diberikan kepada user_Bobi. 
-tampilkan peran apa saja  yang dimiliki oleh user_Andi. */

-- JAWAB --

-- Membuat tabel dan isi data pengguna
CREATE TABLE users (
    id_user VARCHAR2(10),
    nama_lengkap VARCHAR2(50),
    posisi VARCHAR2(50)
);

INSERT INTO users (id_user, nama_lengkap, posisi) VALUES
('A0011', 'Kim Jun Myeon', 'Advisor');
INSERT INTO users (id_user, nama_lengkap, posisi) VALUES
('A0021', 'Byun Baekhyun', 'Regional Manager');
INSERT INTO users (id_user, nama_lengkap, posisi) VALUES
('A0032', 'Park Chan Yeol', 'Creative Lead');
INSERT INTO users (id_user, nama_lengkap, posisi) VALUES
('A0033', 'Kim Kai', 'Media Specialist');

select*from users

-- Membuat tabel big_data
CREATE TABLE big_data (
    id_data NUMBER PRIMARY KEY,
    data VARCHAR2(255)
);

-- Membuat user user_Andi, user_Bobi, user_Caca
CREATE USER user_Andi IDENTIFIED BY 111;
CREATE USER user_Bobi IDENTIFIED BY 222;
CREATE USER user_Caca IDENTIFIED BY 333;

-- Buatkan role dengan nama 'DataAdministrator' yang memiliki perizinan untuk menampilkan dan menambahkan data pada tabel "big_data".
CREATE ROLE DataAdministrator;

GRANT SELECT, INSERT ON big_data TO DataAdministrator;

-- Lalu berikan akses untuk role "DataAdministrator' kepada user_Andi dan user_Bobi.
GRANT DataAdministrator TO user_Andi, user_Bobi;

-- Namun tetap pastikan user_caca tidak memiliki akses apapun ke tabel "big_data". 
REVOKE ALL PRIVILEGES ON big_data FROM user_Caca;


-- Kemudian cabut semua hak akses yang telah diberikan kepada user_Bobi. 
REVOKE ALL PRIVILEGES ON big_data FROM user_Bobi;

-- Tampilkan peran apa saja  yang dimiliki oleh user_Andi
SELECT granted_role
FROM dba_role_privs
WHERE grantee = 'user_Andi';
